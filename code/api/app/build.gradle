plugins {
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '3.0.0'
    id "org.sonarqube" version "4.0.0.2929"
    id 'application'
    id 'jacoco'
    id 'java'
    id "au.com.dius.pact" version "4.3.6"
}

group = 'mx.abrahamNtd.poc.rest'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
mainClassName="mx.abrahamNtd.poc.rest.App"

repositories {
    mavenCentral()
}

dependencies {
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    testCompileOnly 'junit:junit:4.12' 
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'au.com.dius.pact:consumer:4.4.2'
    testImplementation 'au.com.dius.pact:provider:4.4.2'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

sonar {
    properties {
        property 'sonar.host.url', 'http://local-sonar:9000' 
        property "sonar.login", "admin"
        property "sonar.password", "ADMIN"
        property "sonar.projectKey", "rest-api"
        property 'sonar.projectName', 'rest-api'
        property 'sonar.java.source', 17
        property "sonar.sources", "src/main"
    }
}

tasks['sonarqube'].dependsOn jacocoTestReport

pact {
    publish {
        // empty, but needs to be there
    }
    broker {
        pactBrokerUrl = 'http://local-pact-broker/'
    }
    serviceProviders {
        UserServiceJUnit5 {
            // empty, but needs to be there
        }
    }
}