pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git branch: 'feature/basic-setup', changelog: false, poll: false, url: 'https://github.com/abrahamNtd/poc-docker-cicd.git'
            }
        }
        stage('Unit Test') {
            steps {
                echo 'Unit Test ....'
                dir('code/api') {
                    sh './gradlew clean test'
                }
            }
        }
        stage('Code Analisis') {
            steps {
                echo 'Code Analisis ....'
                dir('code/api') {
                    sh './gradlew sonar'
                }
            }
        }
        stage('Build') {
            steps {
                echo 'Building ....'
                dir('code/api') {
                    sh './gradlew build'
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying ....'
                dir('code/api/app/build/libs') {
                    sh 'ls -lt'
                    echo 'Stoping server ....'
                    sh 'ssh sshuser@local-server -p 22 -i /home/jenkins/.ssh/id_rsa ./stop.sh'
                    echo 'Copying jar file ....'
                    sh 'scp -i /home/jenkins/.ssh/id_rsa -P 22 app.jar sshuser@local-server:/home/sshuser/app.jar'
                    echo 'Starting jar server ....'
                    sh 'ssh sshuser@local-server -p 22 -i /home/jenkins/.ssh/id_rsa ./start.sh app.jar'
                }
            }
        }
        stage('Functional Test') {
            steps {
                echo 'Functional Test ....'
                dir('code/api_test') {
                    sh './gradlew clean test'
                }   
            }
        }
    }
    post { 
        always {
            echo 'Publishing Test Reports ....'
            dir('code/api_test/build/reports/TestReport') {
                script {
                    try{
                        def report_name = new Date().format("yyyyMMdd.HHmm", TimeZone.getTimeZone('UTC')) + '.html'
                        def dest = "/usr/share/nginx/html/reports/" + report_name
                        def origin = "Functional_Test_Report.html"
                        sh "scp -i /home/jenkins/.ssh/id_rsa -P 22 ${origin} sshuser@local-server:${dest}"
                        echo "Report http://localhost:8080/reports/${report_name}"
                        sh 'ssh sshuser@local-server -p 22 -i /home/jenkins/.ssh/id_rsa python3 reports.py "api_reports.json" "Unit Test" ' + report_name
                        echo "The web index for the test reports has been updated"
                    }catch (Exception e) {
                        echo "Something went wrong. ";
                    }
                }
                    
            }
        }
    }
}


